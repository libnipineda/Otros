package Ventanas;

import Lexico.Analizador;
import Listas.ELista;
//import Listas.ListaTkn;
import Listas.NodoTkn;
import Reportes.Reporte1;
import java.awt.Color;
import java.awt.Desktop;
import java.io.*;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;


public class Formulario1 extends javax.swing.JFrame {
   JFileChooser seleccionar = new JFileChooser();
   File archivo;
   FileInputStream entrada;
   FileOutputStream salida;
    
    public Formulario1() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        ABRIR = new javax.swing.JMenuItem();
        GUARDAR = new javax.swing.JMenuItem();
        GUARDARC = new javax.swing.JMenuItem();
        SALIR = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        ANALIZAR = new javax.swing.JMenuItem();
        Juego = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        Reporte1 = new javax.swing.JMenuItem();
        Reporte2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtArea.setBackground(new java.awt.Color(255, 255, 255));
        txtArea.setForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(txtArea);

        jMenu1.setText("Archivo");

        ABRIR.setText("Abrir");
        ABRIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABRIRActionPerformed(evt);
            }
        });
        jMenu1.add(ABRIR);

        GUARDAR.setText("Guardar");
        GUARDAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUARDARActionPerformed(evt);
            }
        });
        jMenu1.add(GUARDAR);

        GUARDARC.setText("Guardar como");
        GUARDARC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUARDARCActionPerformed(evt);
            }
        });
        jMenu1.add(GUARDARC);

        SALIR.setText("Salir");
        SALIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SALIRActionPerformed(evt);
            }
        });
        jMenu1.add(SALIR);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Ejecutar");

        ANALIZAR.setText("Analizar");
        ANALIZAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ANALIZARActionPerformed(evt);
            }
        });
        jMenu3.add(ANALIZAR);

        Juego.setText("Jugar");
        Juego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JuegoActionPerformed(evt);
            }
        });
        jMenu3.add(Juego);

        jMenuItem1.setText("Pintar Palabras");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Reportes");

        Reporte1.setText("Reporte de Símbolos");
        Reporte1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reporte1ActionPerformed(evt);
            }
        });
        jMenu5.add(Reporte1);

        Reporte2.setText("Reporte de Errores");
        Reporte2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reporte2ActionPerformed(evt);
            }
        });
        jMenu5.add(Reporte2);

        jMenuBar1.add(jMenu5);

        jMenu4.setText("Ayuda");

        jMenuItem3.setText("Acerca de..");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("Manual de usuario");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem5.setText("Manual tecnico");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ABRIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABRIRActionPerformed
        // TODO add your handling code here:
        if(seleccionar.showDialog(null,"Abrir") == JFileChooser.APPROVE_OPTION)
        {
            archivo = seleccionar.getSelectedFile();
            if(archivo.canRead())
            {
                if(archivo.getName().endsWith("rep"))
                {                    
                    String documento = Abrir(archivo);
                    txtArea.setText(documento);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Archivo No Compatible");                    
                }
            }
        }
    }//GEN-LAST:event_ABRIRActionPerformed

    private void ANALIZARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ANALIZARActionPerformed
        // TODO add your handling code here:
    Analizador leer = new Analizador();
    leer.Scanner(txtArea.getText());    
    }//GEN-LAST:event_ANALIZARActionPerformed

    private void Reporte1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reporte1ActionPerformed
        // TODO add your handling code here:
        Reporte1 ver = new Reporte1();
        ver.Abrir();
    }//GEN-LAST:event_Reporte1ActionPerformed

    private void Reporte2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reporte2ActionPerformed
        // TODO add your handling code here:
        Reporte1 ver = new Reporte1();
        ver.EAbrir();
    }//GEN-LAST:event_Reporte2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"LFP PRACTICA\n Uzzi Libni Aarón Pineda Solórzano \n carné: 201403541");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
     try
     {
         File f = new File("E:/Lenguajes/Vacaciones/[LFP]Proyecto1_201403541/Manual de Usuario.pdf");
         Desktop.getDesktop().open(f);
     }
     catch(IOException e)
     {
         e.printStackTrace();;
     }
     catch(IllegalArgumentException e)
     {
         JOptionPane.showMessageDialog(null, "Archivo no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
         e.printStackTrace();
     }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        try
        {
            File f = new File("E:/Lenguajes/Vacaciones/[LFP]Proyecto1_201403541/Manual Técnico.pdf");
            Desktop.getDesktop().open(f);
        }
        catch(IOException e)
        {
            e.printStackTrace();;
        }
        catch(IllegalArgumentException e)
        {
            JOptionPane.showMessageDialog(null, "Archivo no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void GUARDARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUARDARActionPerformed
        // TODO add your handling code here:
        if(seleccionar.showDialog(null,"Guardar")== JFileChooser.APPROVE_OPTION)
        {
            archivo = seleccionar.getSelectedFile();
            if(archivo.getName().endsWith("rep"))
            {
                String Documento = txtArea.getText();
                String mensaje = GuardarA(archivo,Documento);
                if(mensaje !=null)
                {
                    JOptionPane.showMessageDialog(null,mensaje);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Archivo no Compatible");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Guardar Documento de Texto");
            }
        }
    }//GEN-LAST:event_GUARDARActionPerformed

    private void GUARDARCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUARDARCActionPerformed
        // TODO add your handling code here:
        if(seleccionar.showDialog(null,"Guardar Como")== JFileChooser.APPROVE_OPTION)
        {
            archivo = seleccionar.getSelectedFile();
            if(archivo.getName().endsWith("rep"))
            {
                String Documento = txtArea.getText();
                String mensaje = Guardar(archivo,Documento);
                if(mensaje !=null)
                {
                    JOptionPane.showMessageDialog(null,mensaje);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Archivo no Compatible");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Guardar Documento de Texto");
            }
        }
    }//GEN-LAST:event_GUARDARCActionPerformed

    private void SALIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SALIRActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,"¿Desea salir de la aplicación?") == JOptionPane.OK_OPTION)
        {
         System.exit(0);   
        }
        else
        {
          
        } 
    }//GEN-LAST:event_SALIRActionPerformed

    private void JuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JuegoActionPerformed
        // TODO add your handling code here:
         Formulario frm = new Formulario();
         frm.setVisible(true);
         this.setVisible(false);
    }//GEN-LAST:event_JuegoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Pintar();        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public String Abrir(File archivo)
    {
        String documento="";
        try
        {
            entrada = new FileInputStream(archivo);
         int ascci;
         while((ascci = entrada.read()) !=-1)
         {
             char caracter =(char)ascci;
             documento +=caracter;
         }
        }catch(Exception e)
        {
            
        }  
        return documento;
    }
    
    public String Guardar(File archivo,String documento)
    {
        String mensaje = null;
        try
        {
         salida = new FileOutputStream(archivo);
         byte[] bytxt = documento.getBytes();
         salida.write(bytxt);
         mensaje="Archivo Guardado";
        }catch(Exception e)
        {
            
        }
        return mensaje;
    }
    
    public String GuardarA(File archivo,String documento)
    {
        String mensaje = null;
        try
        {
         salida = new FileOutputStream(archivo);
         byte[] bytxt = documento.getBytes();
         salida.write(bytxt);
         mensaje="Archivo Guardado";
        }catch(Exception e)
        {
            
        }
        return mensaje;
    }

    NodoTkn hola = new NodoTkn();
    String comparar; int bindice;
    
// ---------------------------------------------------------------- pintar letras ----------------------------------------------------------
               
       public void Pintar()
    {
        comparar = txtArea.getText();                                       
        
        bindice = txtArea.getText().indexOf("Nivel");
        pintarReservadas(bindice,comparar);
                        
        bindice = txtArea.getText().indexOf("codigo");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("nombre");
        pintarIdentificadores(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("Edificio");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("DimensionX");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("DimensionY");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("Bloque");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("PosicionX");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("PosicionY");
        pintarReservadas(bindice,comparar);
               
        bindice = txtArea.getText().indexOf("Escalera");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("Personaje");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("imagen");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("Enemigo");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("Movimiento");
        pintarReservadas(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("0");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("1");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("2");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("3");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("4");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("5");
        pintarNumeros(bindice,comparar);
                        
        bindice = txtArea.getText().indexOf("6");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("7");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("8");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("9");
        pintarNumeros(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("cadena");
        pintarCadena(bindice,comparar);
               
        bindice = txtArea.getText().indexOf("<");
        pintarMenoryMayor(bindice,comparar);
                
        bindice = txtArea.getText().indexOf(">");
        pintarMenoryMayor(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("=");
        pintarIgual(bindice,comparar);
                
        bindice = txtArea.getText().indexOf("/");
        pintarBarra(bindice,comparar);                
    }
    
    public void pintarReservadas(int pindice, String pcomparar)
    {
        if(pindice == -1){
              System.out.println("palabra no encontrada");
          }
          else
          {
              System.out.println("Palabra encontrada");                            
              txtArea.setForeground(Color.cyan);
          }     
    }
    
    public void pintarNumeros(int pindice, String pcomparar)
    {                 
        if(pindice == -1){
              System.out.println("palabra no encontrada");
          }
          else
          {
              System.out.println("Palabra encontrada");              
              txtArea.setForeground(Color.red);
          }
        
    }
    
    public void pintarIdentificadores(int pindice, String pcomparar){
        if(pindice == -1){
              System.out.println("palabra no encontrada");
          }
          else
          {
              System.out.println("Palabra encontrada");              
              txtArea.setForeground(Color.yellow);
          }
    }
    
    
    public void pintarCadena(int pindice, String pcomparar)
    {
        if(pindice == -1){
              System.out.println("palabra no encontrada");
          }
          else
          {
              System.out.println("Palabra encontrada");              
              txtArea.setForeground(Color.green);
          }
    }
    
    public void pintarMenoryMayor(int pindice, String pcomparar)
    {
        if(pindice == -1){
              System.out.println("palabra no encontrada");
          }
          else
          {
              System.out.println("Palabra encontrada");              
              txtArea.setForeground(Color.orange);
          }
    }
    
    public void pintarIgual(int pindice, String pcomparar)
    {
       if(pindice == -1){
              System.out.println("palabra no encontrada");
          }
          else
          {
              System.out.println("Palabra encontrada");              
              txtArea.setForeground(Color.pink);
          }
    }
    
    public void pintarBarra(int pindice, String pcomparar)
    {
       if(pindice == -1){
              System.out.println("palabra no encontrada");
          }
          else
          {
              System.out.println("Palabra encontrada");              
              txtArea.setForeground(Color.pink);
          }
    } 
    
//  ---------------------------------------------------------------- main ----------------------------------------------------------       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ABRIR;
    private javax.swing.JMenuItem ANALIZAR;
    private javax.swing.JMenuItem GUARDAR;
    private javax.swing.JMenuItem GUARDARC;
    private javax.swing.JMenuItem Juego;
    private javax.swing.JMenuItem Reporte1;
    private javax.swing.JMenuItem Reporte2;
    private javax.swing.JMenuItem SALIR;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane txtArea;
    // End of variables declaration//GEN-END:variables
}
